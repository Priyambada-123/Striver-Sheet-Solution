class Solution:
    def check(self,row,col,item,board):
        for i in range(9):
            if board[i][col]==item or board[row][i]==item:
                return False
        start=(row//3)*3
        end=(col//3)*3
        for i in range(start,start+3):
            for j in range(end,end+3):
                if board[i][j]==item:
                    return False
        return True
    def solve(self,board):
        for i in range(9):
            for j in range(9):
                if board[i][j]==".":
                    for p in range(1,10):
                        if self.check(i,j,str(p),board):
                            board[i][j]=str(p)
                            if self.solve(board):
                                return True
                            else:
                                board[i][j]="."
                    return False
        return True
            
    def solveSudoku(self, board: List[List[str]]) -> None:
        """
        Do not return anything, modify board in-place instead.
        """
        return self.solve(board)
